//함수
//1.사용자 정의 함수: 사용자가 필요한 기능을 직접만든 함수
//2.자바스크립트 코어 함수: 기본적으로 제공하는 함수
//ex) parseInt(), Math.random() 등

//사용 방법에 따른 함수 종류
//1.일반 함수: 가장 일반적으로 사용한 함수

//2.중첩 함수: 함수안에 함수가 있는 경우
// 주로 이름이 없는 이벤트 리스너로 많이 활용된다.
// ex) $(document).ready(function() {
//        $("#btnStart").click(function(){
//            alert("안녕하세요.");
//        })
//     })

//3.콜백 함수: 함수 실행결과 값을 리턴이 아닌 매개변수로 넘어온 함수를 호출해서 넘겨주는 방식을 콜백이라하며,
// 이때 매개변수로 넘어온 함수를 콜백함수라고 한다.
//주로 함수 내부의 처리 결과값을 함수 외부로 내보낼 때 사용(일종의 return문과 비슷한 기능)
//통상적으로 단순한 처리는 return문을 이용하는 것이 더 효율적
//비동기 함수의 결과값을 처리하기 위한 방법으로 주로 사용
//이벤트리스너로 사용(버튼클릭 등), 타이머 실행함수로 사용(특정 시간마다 실행하는 경우 등), 서버와 데이터를 주고받을 때 사용하는 jQuery, Ajax 기능들에서 결과물을 받을 때, jQuery 애니메이션 기능에서 애니메이션이 모두 끝났을 때 실행하고자 하는 함수

//4.클로저 함수: 함수 내부의 실행구문을 모두 실행하게 되면 함수 내부에서 만든 지역변수가 자동으로 사라지지만,
// 어떤 경우에는 사라지지 않고 남는 경우가 존재, 이 현상을 클로저라고 하며 이 현상을 일으키는 함수를 클로저 함수라 한다.


//동기(synchronize)
//일반적으로 함수가 호출된 후 끝날 때까지 다음 구문을 실행하지 않고 대기하는 것

//비동기(unsynchronize)
//함수가 호출된 후 끝날때까지 기다리지 않고 다음 구문을 바로 실행하는 것을 비동기라 칭한다.
